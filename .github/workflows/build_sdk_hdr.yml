name: Build IDA SDK tils

on:
  workflow_dispatch:
    inputs:
      idasdk_version:
        description: 'IDA SDK Version to build (must be uploaded to gdrive first)'
        required: true
        default: 77
      release_tag:
        description: 'Release tag for Github'
        required: true
        default: ida77
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false


jobs:
  build_til:
    runs-on: windows-2019
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master             # set the branch to merge to
          fetch-depth: 0
      - name: Setup committer
        run: |
          git config --global user.email "misty@misty.moe"
          git config --global user.name "NyaMisty"
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: x64
          cache: 'pip'
      - run: pip3 install -r requirements.txt
      - name: Process SDK
        run: |
          reg add "HKCU\Software\Hex-Rays\IDA" /v "License docker-wine-ida" /t REG_DWORD /d 1 /f
          set PYTHONIOENCODING=UTF-8
          python3 process_sdk.py ${{ github.event.inputs.idasdk_version }}
        shell: cmd
      #- name: Prepare to push  
      #  run: git branch -f master
      - name: Setup tmate session
        if: ${{ !cancelled() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@master

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: output_tils/*
      - name: "Upload to Github Prerelease"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "output_tils/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "${{ format('{0}: tils for IDA {1}', github.event.inputs.release_tag, github.event.inputs.idasdk_version) }}"
          tag: "${{ github.event.inputs.release_tag }}"
          commit: master
          #prerelease: true
          allowUpdates: true
          removeArtifacts: true
          artifactErrorsFailBuild: true